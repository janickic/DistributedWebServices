##################################################
# file: TimeServer_client.py
# 
# client stubs generated by "ZSI.generate.wsdl2python.WriteServiceModule"
#     /usr/bin/wsdl2py soap.wsdl
# 
##################################################

from TimeServer_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
from ZSI.schema import GED, GTD
import ZSI

# Locator
class TimeServerLocator:
    TimeServer_address = "http://localhost:7000"
    def getTimeServerAddress(self):
        return TimeServerLocator.TimeServer_address
    def getTimeServer(self, url=None, **kw):
        return TimeServerSOAP(url or TimeServerLocator.TimeServer_address, **kw)

# Methods
class TimeServerSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: Time
    def Time(self, request, **kw):
        if isinstance(request, TimeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="Time", **kw)
        # no output wsaction
        response = self.binding.Receive(TimeResponse.typecode)
        return response

TimeRequest = GED("urn:ZSI", "Time").pyclass

TimeResponse = GED("urn:ZSI", "Time").pyclass
